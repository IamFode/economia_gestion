source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
beta1y2(x,y)
summary(lm(y~x))
summary(lm(y~x))
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
source("funciones.R")
beta1y2(x,y)
beta1y2(y,x)
summary(lm(y~x))
beta1y2(y,x)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(y,x)
beta1y2(x)
beta1y2(x,y)
beta1y2(2,3)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
return(beta1, beta0)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(2,3)
beta1y2(x,y)
sumnam <- 0
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
return(beta1)
return(beta0)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta0)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
summary(lm(y~x))
beta1y2(y,x)
reticulate::repl_python()
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
return(beta1, beta0)
}
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
beta1y2(x,y)
summary(lm(y~x))
beta1y2(x,y)
summary(lm(y~x))
beta1y2(y,x)
for (i in range(length(x))){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
range(length(x))
range(length(x))
sumnam <- 0
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in length(x)){
sumnam <- (x[i]-mediax) * (y[i]-mediay)
sumden <- (x[i]-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
beta1y2(x,y)
summary(lm(y~x))
beta1y2(x,y)
x[0]
x[1]
length(x)
for (i in range){
print(i)
}
for (i in length(x)){
print(i)
}
for (i in range(length(x)){
for (i in range(length(x))){
print(i)
}
for (i in range(length(x))){
print(i)
}
for (i in range(x)){
print(i)
}
for (i in length(x)){
print(i)
}
for (i in range(0,length(x))){
print(i)
}
for (i in x){
print(i)
}
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in x){
sumnam <- (i-mediax) * (i-mediay)
sumden <- (i-mediax)^2
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in x){
sumnam <- sumnam + ( (i-mediax) * (i-mediay) )
sumden <- sumdem + ( (i-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in x){
sumnam <- sumnam + ( (i-mediax) * (i-mediay) )
sumden <- sumden + ( (i-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
for (i in x){
print(i)
}
for (i in range(1:10)){
sumnam <- sumnam + ( (i-mediax) * (i-mediay) )
sumden <- sumden + ( (i-mediax)^2 )
}
for (i in 0:10){
print(i)
}
for (i in 0:length(x)){
print(i)
}
for (i in 1:length(x)){
print(i)
}
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in 1:range(x)){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:n){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
print(beta1)
print(beta0)
}
summary(lm(y~x))
beta1y2(x,y)
beta1y2(x,y)
beta1y2(x,y)
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:n){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, "beta 1",beta1)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
n1 = length(y)
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:length(x)+1){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, "beta 1",beta1)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in 1:length(x)+1){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, "beta 1",beta1)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
sumnam <- 0
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
mediax = sum(x) / length(x)
mediay = sum(y) / length(y)
for (i in 1:length(x)+1){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, "beta 1",beta1)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:n){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, "beta 1",beta1)
}
summary(lm(y~x))
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
cat("beta 0: ", beta0, ", beta 1: ",beta1)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:n){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0: ", beta0, ", beta 1: ",beta1)
}
summary(lm(y~x))
beta1y2(x,y)
################ Estimadores de mínimos cuadrados ordinarios ###################
beta1y2 <- function(x,y){
sumnam <- 0
sumden <- 0
n = length(x)
n1 = length(y)
mediax = sum(x) / n
mediay = sum(y) / n1
for (i in 1:n){
sumnam <- sumnam + ( (x[i]-mediax) * (y[i]-mediay) )
sumden <- sumden + ( (x[i]-mediax)^2 )
}
beta1 <- sumnam / sumden
beta0 <- mediay - beta1*mediax
cat("beta 0:", beta0, ", beta 1:",beta1)
}
source("funciones.R")
x <- c(2,3,4,8,6,7)
y <- c(9,7,6,5,9,7)
summary(lm(y~x))
beta1y2(x,y)
data('ceosal1')
str(ceosal1)
data('ceosal1')
load("~/git/ciencias_sociales/economia/econometria/R/.RData")
