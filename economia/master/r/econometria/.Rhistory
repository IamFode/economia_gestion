names(salarios$coefficients)= c("Beta 1","UTOWN","SQFT","SQFT*UTOWN","AGE","POOL","FPLACE")
summary(salarios)
sum(fitted(salarios))
sum((fitted(salarios)-salario$EDUC)^2)
sum((fitted(salarios)-salario$score)^2)
sum((fitted(salarios)-salario$EDUC)^2)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
salariosU = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE),data=salario)
summary(salarios)
library(hexView)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
salariosU = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE),data=salario)
summary(salariosU)
library(hexView)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
salariosR = lm(WAGE~EDUC,data=salario)
summary(salariosR)
sum((fitted(salariosR)-salario$score)^2)
sum((fitted(salariosR)-salario$EDUC)^2)
fitted(salariosR)
sum((fitted(salariosR)-salario$EDUC)^2)
salariosR$fitted.values
salariosR$df.residual
salariosR$residuals
salariosR$rank
salariosR$effects
salariosR$model
sum(salariosR$fitted.values)
sum(salariosR$fitted.values)^2
sum(salariosR$fitted.values)
summary(aov(salariosR))
salariosR$residuals
sum(salariosR$residuals)
sum(salariosR$residuals^2)
sum(salariosU$residuals^2)
salariosU$effects
salariosU$residuals
salariosU$rank
salariosU$fitted.values
salariosU$assign
salariosU$qr
salariosU$df.residual
pf(20)
pf(20,3)
pf(20,-1,3)
pf(20,.1,3)
pf(20.20,3,0.1)
pf(20.20,3,0.01)
pf(20.20,3,1)
pf(20.20,3,.1)
pf(20.20,3,995,.1)
pf(20.20,995,3,.1)
?pf
pf(20.20,995,3)
pf(20.20,995,3,lower.tail = FALSE)
pf(20.20,995,3)
df(20.20,995,3)
qf(20.20,995,3)
rf(20.20,995,3)
qf(20.20,995,3)
qf(.1,995,3)
qf(.1,3,995)
qf(.1,995,3)
.1,3,995
pf(.1,3,995)
pf(.1,995,3)
pf(.01,3,995)
pf(1,3,995)
pf(.1,3,995)
qf(3.8)
qf(3.8,3)
qf(3.8,3,995)
qf(3.8,995,3)
pf(20.20,955,3)
pf(20.20,3,955)
pf(20.20,3,955)
qf(20.20)
qf(20.20,3)
qf(20.20,3,995)
pf(.1,3,995)
pf(.01,3,995)
pf(.05,6,8)
pf(.05,6,8,lower.tail = FALSE)
qf(.05,6,8,lower.tail = FALSE)
qf(.05,6,8)
qf(.1,6,8)
qf(.1,3,995)
qf(.01,3,995)
qf(0.99,3,995)
anova(salariosU)
wald.test(salariosR)
wald.test(coef(salariosR))
wald.test?
?wald.test
??wald.test
cvoc(salariosR)
vcoc(salariosR)
vcov(salariosR)
wald.test(vcov(salariosU),coef(salariosR))
?wald
??wald
install.packages("aod")
library(aod)
wald.test(vcov(salariosU),coef(salariosR))
wald.test(coef(salariosR))
wald.test(vcov(salariosU),coef(salariosR),Terms = 3:4)
wald.test(vcov(salariosU),coef(salariosR),Terms = 1:2)
wald.test(vcov(salariosU),coef(salariosR),Terms = 1)
wald.test(vcov(salariosU),coef(salariosR),Terms = 1:2)
wald.test(vcov(salariosU),coef(salariosR),Terms = 1:3)
wald.test(vcov(salariosU),coef(salariosR),Terms = c(1,2))
wald.test(vcov(salariosU),coef(salariosR),Terms = 0:2)
wald.test(vcov(salariosU),coef(salariosR))
?wald.test
wald.test(coef(salariosU),coef(salariosU),Terms = NULL)
wald.test(coef(salariosU),coef(salariosU),Terms = NULL,L=NULL)
wald.test(coef(salariosU),coef(salariosU),L=NULL)
wald.test(coef(salariosU),coef(salariosU),Terms = 3:4)
wald.test(coef(salariosU),coef(salariosU),Terms = 2:3)
wald.test(coef(salariosU),coef(salariosU),Terms = 1:2)
wald.test(coef(salariosU),coef(salariosU),Terms = 0:1)
wald.test(coef(salariosU),coef(salariosU),Terms = 4:5)
wald.test(coef(salariosU),coef(salariosU),Terms = 5:6)
wald.test(coef(salariosU),coef(salariosU),Terms = 5)
wald.test(coef(salariosU),coef(salariosU),Terms = 4)
wald.test(coef(salariosU),coef(salariosU),Terms = 3)
wald.test(coef(salariosU),coef(salariosU),Terms = 2)
wald.test(coef(salariosU),coef(salariosU),Terms = 1)
wald.test(coef(salariosU),coef(salariosU),Terms = 1:3)
wald.test(coef(salariosU),coef(salariosU),Terms = 1:4)
wald.test(coef(salariosU),coef(salariosU),Terms = 1:5)
wald.test(coef(salariosU),coef(salariosU),Terms = 2:4)
wald.test(coef(salariosU),coef(salariosU),Terms = 2:3)
wald.test(coef(salariosU),coef(salariosU),Terms = 2:5)
wald.test(coef(salariosU),coef(salariosU),Terms = 3:4)
wald.test(coef(salariosU),coef(salariosU),Terms = 2:4)
wald.test(coef(salariosU),coef(salariosU))
wald.test(coef(salariosU),coef(salariosU),L=NULL)
wald.test(coef(salariosU),coef(salariosU),Terms = 3:5)
wald.test(vcov(salariosU),coef(salariosU),Terms = 3:5)
wald.test(Sigma=vcov(salariosU),b=coef(salariosU),Terms = 3:5)
wald.test(Sigma=vcov(salariosU),b=coef(salariosU),Terms = 1:2)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = NULL)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:5)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:5)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:6)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:4)
wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:5)
anova(salariosU)
wald=wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:5)
wald$H0
wald$result
wald$Terms
wald$H0
wald$verbose
wald$df
wald$Sigma
wald$b
wald$Terms
wald$verbose
wald
wald$df
wald$f
wald$df
wald$df
wald$H0
wald$result
wald$L
wald=wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3:5)
wald
wald1=wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3)
wald1
wald.test(salariosU,Terms = 1)
wald.test(salariosU,Terms = 2)
salariosU = glm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE),data=salario)
summary(salariosU)
wald.test(salariosU,Terms = 1)
wald1=wald.test(Sigma=vcov(salariosU),coef(salariosU),Terms = 3)
wald1
View(salario)
library(hexView)
library(aod)
# data
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
wage = lm(WAGE~EDUC+SOUTH+MIDWEST+WEST,data=salario)
summary(wage)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+MIDWEST+WEST,data=salario)
summary(wage)
wald.test(vcov(wage),coef(wage),Terms = 5:7)
wald2=wald.test(vcov(wage),coef(wage),Terms = 5:7)
wald2
wald2=wald.test(vcov(wage),coef(wage),Terms = 6:8)
wald2
wald2$Sigma
wald2$b
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH+I(BLACK*SOUTH)+I(FEMALE*SOUTH)),data=salario)
summary(wage)
summary(wage)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH)+I(BLACK*SOUTH)+I(FEMALE*SOUTH)),data=salario)
summary(wage)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH)+I(BLACK*SOUTH)+I(FEMALE*SOUTH)),data=salario)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH)+I(BLACK*SOUTH)+I(FEMALE*SOUTH),data=salario)
summary(wage)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH)+I(BLACK*SOUTH)+I(FEMALE*SOUTH),I(BLACK*FEMALE*SOUTH),data=salario)
summary(wage)
wage = lm(WAGE~EDUC+BLACK+FEMALE+I(BLACK*FEMALE)+SOUTH+I(EDUC*SOUTH)+I(BLACK*SOUTH)+I(FEMALE*SOUTH)+I(BLACK*FEMALE*SOUTH),data=salario)
summary(wage)
wald.test(vcov(wage),coef(wage),Terms = 6:10)
wald.test(vcov(wage),coef(wage),Terms = 6:10)
pizza = readEViews("../data/Suposto 1.5 Modelos pizza. 3Edition.wf1")
View(pizza)
gasto = readEViews("../data/Suposto 1.5 Modelos pizza. 3Edition.wf1")
pizza = lm(PIZZA~AGE+INCOME,data=gasto)
summary(pizza)
pizza1 = lm(PIZZA~AGE+INCOME+I(AGE*INCOME),data=gasto)
summary(pizza1)
library(hexView)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
logWage = lm(log(WAGE)~EDUC+EXPER+I(EXPER^2)+EDUC*EXPER,data=salario)
names(logWage$coefficients) = c("ln(WAGE)","EDUC","EXPER","EXPER^2","EDUC*EXPER")
summary(logWage)
lnWAGE = lm(WAGE~EDUC+EXPER+I(EDUC*EXPER),data=salario)
summary(LnWAGE)
summary(LnWAGE)
lnWAGE = lm(WAGE~EDUC+EXPER+I(EDUC*EXPER),data=salario)
summary(LnWAGE)
lnWAGE = lm(WAGE~EDUC+EXPER+I(EDUC*EXPER),data=salario)
summary(lnWAGE)
lnWAGE = lm(lg(WAGE)~EDUC+EXPER+I(EDUC*EXPER),data=salario)
lnWAGE = lm(log(WAGE)~EDUC+EXPER+I(EDUC*EXPER),data=salario)
summary(lnWAGE)
logWage = lm(log(WAGE)~EDUC+EXPER+I(EXPER^2)+EDUC*EXPER,data=salario)
summary(logWage)
logWage = lm(log(WAGE)~EDUC+EXPER+I(EXPER^2)+EDUC*EXPER,data=salario)
names(logWage$coefficients) = c("BETA 1","EDUC","EXPER","EXPER^2","EDUC*EXPER")
summary(logWage)
View(salarios)
View(salariosR)
View(salario)
library(hexView)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
logWage = lm(log(WAGE)~EDUC+EXPER+I(EXPER^2)+EDUC*EXPER,data=salario)
names(logWage$coefficients) = c("BETA 1","EDUC","EXPER","EXPER^2","EDUC*EXPER")
summary(logWage)
library(hexView)
salario = readEViews("../data/Suposto 1.3 Modelos salarios.3Edition.wf1")
logWage = lm(log(WAGE)~EDUC+EXPER+I(EXPER^2)+EDUC*EXPER,data=salario)
names(logWage$coefficients) = c("BETA 1","EDUC","EXPER","EXPER^2","EDUC*EXPER")
summary(logWage)
logWage$coefficients
logWage$coefficients[3]
View(salario)
# data
renta = readEViews("../data/Suposto 2.1 Modelos de renda. Hill 2008.WF1")
#library
library(hexView)
library(aod)
# data
renta = readEViews("../data/Suposto 2.1 Modelos de renda. Hill 2008.WF1")
female = lm(FAMINC~HEDU+WEDU,data=gasto)
View(gasto)
female = lm(FAMALE~HEDU+WEDU,data=gasto)
# data
renta = readEViews("../data/Suposto 2.1 Modelos de renda. Hill 2008.WF1")
View(renta)
female = lm(FAMANC~HEDU+WEDU,data=renta)
female = lm(FAMINC~HEDU+WEDU,data=renta)
faminc = lm(FAMINC~HEDU+WEDU,data=renta)
summary(faminc)
AIC(faminc,2)
AIC(faminc)
AIC(faminck=,2)
AIC(faminck=2)
AIC(faminc,k=2)
BIC(faminc)
e^(AIC(faminc,k=2))
esp(AIC(faminc,k=2))
exp(AIC(faminc,k=2))
log(AIC(faminc,k=2))
BIC(log(faminc)
)
AIC(logLok(faminc),k=2)
?AIC
2*2-2log(faminc)
2*2-2*log(faminc)
2*2-2*log(faminc$assign)
install.packages("AICcmodavg")
library(AICcmodavg)
library(AICcmodavg)
AIC(faminc)
broom::glance(faminc)
install.packages("broom")
library(broom)
broom::glance(faminc)
e^(10317)
exp(10317)
log(10317)
r = summary(faminc)
logLik(faminc)
2*2-2*logLik(faminc)
faminc = lm(FAMINC~HEDU,data=renta)
faminc = lm(FAMINC~HEDU,data=renta)
summary(faminc)
faminc1 = lm(FAMINC~HEDU,data=renta)
AIC(faminc)
renta_fam = lm(FAMINC~HEDU+WEDU,data=renta)
BIC(renta_fam,log(nrow(renta)))
BIC(renta_fam,k=log(nrow(renta)))
BIC(renta_fam,log(nrow(renta$FAMINC)))
BIC(renta_fam,log(nrow(renta$HEDU)))
swiss
AIC(lm1, k = log(nrow(swiss)))
lm1 <- lm(Fertility ~ . , data = swiss)
AIC(lm1, k = log(nrow(swiss)))
renta_fam = lm(FAMINC~HEDU+WEDU,data=renta)
BIC(renta_fam,log(nrow(renta)))
BIC(renta_fam,log(2))
BIC(renta_fam,k=log(2))
BIC(renta_fam,k=2)
BIC(renta_fam,k=3)
BIC(renta_fam)
log(nrow(renta))
log(nrom(swiss))
log(nrow(swiss))
AIC(renta_fam,log(nrow(renta)))
logLik(renta_fam)
2*renta_fam$terms +  len(renta)*sum(renta_fam$residuals)
renta_fam$terms
renta_fam$coefficients
len(renta_fam$coefficients)
len(renta)
length(data)
nrow(data)
nrow(renta)
2*2 +  nrow(renta)*sum(renta_fam$residuals)
2*2 +  nrow(renta)*log(sum(renta_fam$residuals)/nrow(renta))
2*2 +  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
2*3 +  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
2*3 +  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
AIC(renta_fam)
2*3 +  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
AIC(renta_fam)
renta_fam$rank
2*renta_fam$rank -  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
2*renta_fam$rank +  nrow(renta)*log(sum(renta_fam$residuals^2)/nrow(renta))
3*9084.297
AIC(renta_fam)
BIC(renta_fam)
renta_fam2 = lm(FAMINC~HEDU+WEDU+kl6+xtra_x5+xtra_x6,data=renta)
summary(renta_fam2)
renta_fam2 = lm(FAMINC~HEDU+WEDU+kl6+xtra_x5+xtra_x6,data=renta)
renta_fam2 = lm(FAMINC~HEDU+WEDU+KL6+xtra_x5+xtra_x6,data=renta)
renta_fam2 = lm(FAMINC~HEDU+WEDU+KL6+XTRA_X5+XTRA_X6,data=renta)
summary(renta_fam2)
AIC(renta_fam2)
BIC(renta_fam2)
cor(renta$FAMINC,renta$HEDU,renta$WEDU,renta$KL6,renta$XTRA_X5,renta$XTRA_X6)
cor(renta$FAMINC,renta$HEDU,renta$WEDU,renta$KL6,renta$XTRA_X5,renta$XTRA_X6)
cor(renta$FAMINC,renta$HEDU,renta$WEDU,renta$KL6)
cor(renta)
cor(renta[,c("FAMINC", "HEDU" )])
cor(renta[,c("FAMINC", "HEDU" ,"WEDU","KL6")])
cor(renta[,c("FAMINC","HEDU","WEDU","KL6","XTRA_X6")])
cor(renta[,c("FAMINC","HEDU","WEDU","KL6","XTRA_X5","XTRA_X6")])
cor(renta[,c("FAMINC","HEDU","WEDU","KL6","XTRA_X5","XTRA_X6")])
AIC(renta_fam1)
renta_fam1 = lm(FAMINC~HEDU,data=renta)
summary(renta_fam1)
AIC(renta_fam1)
BIC(renta_fam2)
cor(renta[,c("FAMINC","HEDU","WEDU","KL6","XTRA_X5","XTRA_X6")])
summaryRobust(renta_fam)
par(mfrow=c(2,2))
summaryRobust <- function(model){
regOutput <- cbind( as.data.frame(summary(model)[4]), as.data.frame(confint(model)) )
colnames(regOutput) <- c("Estimate", "Std. Error", "T-Value", "P-Value", "C.I. 2.5%", "C.I. 97.5%")
rSq <- summary(model)$r.squared
Adj_rSq <- summary(model)$adj.r.squared
modelFit <- rbind(rSq, Adj_rSq)
rownames(modelFit) <- c("R-squared", "Adjusted R-squared")
colnames(modelFit) <- c("")
metrics <- as.data.frame(cbind(AIC(model), BIC(model), logLik(model)))
colnames(metrics) <- c("AIC", "BIC", "logLik")
rownames(metrics) <- c("")
par(mfrow=c(2,2))
plot(model)
out <- list(Model_Output = regOutput, Model_Fit = modelFit, Other_Metrics = metrics)
return(out)
}
summaryRobust(renta_fam)
summaryRobust(renta_fam2)
summaryRobust <- function(model){
regOutput <- cbind( as.data.frame(summary(model)[4]), as.data.frame(confint(model)) )
colnames(regOutput) <- c("Estimate", "Std. Error", "T-Value", "P-Value", "C.I. 2.5%", "C.I. 97.5%")
rSq <- summary(model)$r.squared
Adj_rSq <- summary(model)$adj.r.squared
modelFit <- rbind(rSq, Adj_rSq)
rownames(modelFit) <- c("R-squared", "Adjusted R-squared")
colnames(modelFit) <- c("")
return(out)
}
summaryRobust(renta_fam2)
summaryRobust <- function(model){
regOutput <- cbind( as.data.frame(summary(model)[4]), as.data.frame(confint(model)) )
colnames(regOutput) <- c("Estimate", "Std. Error", "T-Value", "P-Value", "C.I. 2.5%", "C.I. 97.5%")
rSq <- summary(model)$r.squared
Adj_rSq <- summary(model)$adj.r.squared
modelFit <- rbind(rSq, Adj_rSq)
rownames(modelFit) <- c("R-squared", "Adjusted R-squared")
colnames(modelFit) <- c("")
}
summaryRobust(renta_fam2)
renta_fam3 = lm(FAMINC~HEDU+WEDU+KL6+XTRA_X5+XTRA_X6,data=renta)
summary(renta_fam3)
AIC(renta_fam3)
BIC(renta_fam3)
resettest(renta_fam2 , power=2, type="regressor")
library("lmtest")
install.packages("lmtest")
library("lmtest")
library("lmtest")
install.packages("lmtest")
install.packages("lmtest")
library("lmtest")
install.packages("zoo")
install.packages("zoo")
library("lmtest")
#library
library(hexView)
library(aod)
library(broom)
library("lmtest")
resettest(renta_fam2 , power=2, type=c("fitted","regressor"))
resettest(renta_fam2 , power=2, type=c("fitted"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("princomp"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("fitted"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("fitted"))
resettest(renta_fam2 , power=2)
resettest(renta_fam2 , power=2)
resettest(renta_fam2 , power=2, type=c("princomp"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam3 , power=2, type=c("regressor"))
resettest(renta_fam , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("regressor"))
resettest(renta_fam2 , power=2, type=c("fitted"))
resettest(renta_fam2 , power=2:3, type=c("fitted"))
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
salario = readEViews("../data/datos suposto 5.2.wf1",time.stamp=TRUE, as.data.frame = TRUE)
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1",time.stamp=TRUE, as.data.frame = TRUE)
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
library("rio")
install.packages("rio")
library(rio)
library(hexView)
library(rio)
import("../data/datos suposto 5.2.wf1")
salario = readEViews("../data/datos suposto 5.2.wf1")
import("../data/datos suposto 5.2.wf1")
salario = readEViews("../data/datos suposto 5.2.wf1")
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
View(salario)
logI = lm(log(INGRESOS)+S+EXPE+SEXO,data=salario)
logI = lm(log(INGRESOS)+S+EXPE+SEXO,data=salario)
library(hexView)
salario = readEViews("../data/datos suposto 5.2.wf1")
logI = lm(log(INGRESOS)+S+EXPE+SEXO,data=salario)
logI = lm(INGRESOS+S+EXPE+SEXO,data=salario)
logI = lm(log(INGRESOS)~S+EXPE+SEXO,data=salario)
logI = lm(log(INGRESOS)~S+EXPE+SEXO,data=salario)
summary(logI)
install.packages("gmm")
library(gmm)
install.packages("sandwich")
install.packages("sandwich")
library(gmm)
install.packages("sandwich")
install.packages("sandwich")
library(gmm)
library(sandwich)
library(gmm)
#data
salario = readEViews("../data/datos suposto 5.2.wf1")
#library
library(hexView)
library(sandwich)
library(gmm)
#data
salario = readEViews("../data/datos suposto 5.2.wf1")
gmm(logI)
gmm(logI,c("PNT"))
gmm(logI,c(PNT))
gmm(logI,PNT)
gmm(logI,salario$PNT)
gmm(logI)
gmm(logI,data=salario)
gmm(logI,x=salario)
gmm(logI,x)
gmm(logI)
gmm(logI,x=salario)
gmm(logI,data=salario)
