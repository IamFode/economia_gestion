# MODELO AR (autoregresivo)
ar = arima(st,order = c(1,0,0))
summary(ar)
ar$coef
ar$model
# MODELO AR (autoregresivo)
arima(st,order = c(1,0,0))
plot(st)
plot(diff(st ))
plot(diff(st ))
diffst=plot(diff(st ))
#autocorrelación simple
acf(diffst,lag.max = 100)
# MODELO AR (autoregresivo)
arima(st,order = c(1,1,0))
# MODELO AR (autoregresivo)
arima = arima(st,order = c(1,0,0))
arima$residuals
# MODELO AR (autoregresivo)
arima = arima(st,order = c(1,0,0))
Box.test(arima$residuals,lag=4,type="Ljung-Box")
Box.test(arima$residuals,lag=10,type="Ljung-Box")
plot.ts(st)
plot(st)
plot(pib)
plot.ts(pib)
plot.ts(st)
plot(st)
plot(st.diff)
log(st)
plot(log(st))
st = ts(pib,start = c(1990,1),end = c(2021,4),frequency = 4)
plot(st)
plot(log(st))
plot(diff(log(st)))
plot(diff(st))
plot(diff(log(st)))
plot(diff(st))
plot(st)
plot(log(st))
plot(diff(log(st)))
plot(diff(st))
logD = diff(log(st))
acf(logD,lag.max = 100)
#autocorrelación simple
acf(st,lag.max = 100)
acf(logD,lag.max = 100)
pacf(logD,lag.max = 100)
acf(logD,lag.max = 100)
# MODELO AR (autoregresivo)
arima = arima(logD,order = c(1,0,0))
# MODELO AR (autoregresivo)
arima(logD,order = c(1,0,0))
pacf(logD,lag.max = 100)
acf(logD,lag.max = 100)
# MODELO AR (autoregresivo)
arima(logD,order = c(2,0,2))
# MODELO AR (autoregresivo)
arima(logD,order = c(2,0,2))
# MODELO AR (autoregresivo)
arima(logD,order = c(2,0,1))
# MODELO AR (autoregresivo)
autarima(logD,order = c(1,0,1))
# MODELO AR (autoregresivo)
arima(logD,order = c(1,0,1))
#autocorrelación simple
acf(st,lag.max = 100)
#autocorrelacion parcial
pacf(pib,lag.max = 100)
#library
library(readxl)
library(forecast)
#data
export=read_excel("../data/exportaciones servicios_España.xlsx",sheet="Gretl",col_names = "export")
export=ts(export,start=c(1995,1),frequency=4)
plot(export)
boxplot(export)
acf(diff(log(export)))
pacf(diff(log(export)))
acf(diff(log(export)))
pacf(diff(log(export)))
arima_=arima(diff(log(export)),c(3,0,3))
arima_
auto.arima(diff(log(export)),trace = TRUE)
arima_=arima(diff(log(export)),c(3,0,0))
arima_
auto.arima(diff(log(export)),trace = TRUE)
auto.arima(export,trace = TRUE)
auto.arima(diff(log(export)),trace = TRUE)
auto.arima(export,trace = TRUE)
# MODELO AR (autoregresivo)
auto.arima(st)
# MODELO AR (autoregresivo)
auto.arima(st,trace = TRUE)
plot(diff(st))
# MODELO AR (autoregresivo)
auto.arima(st)
plot(diff(st))
plot(st)
plot(log(st))
plot(st)
plot(log(st))
plot(st)
plot(log(st))
plot(st)
plot(log(st))
logSt = log10(st)
logSt
plot(logSt)
logSt = log(st)
plot(logSt)
logSt = log(st)
plot(logSt)
plot(logSt)
logSt = log(st)
DlogSt = diff(logSt)
plot(DlogSt)
diff(log(st))
plot(diff(log(st)))
plot(DlogSt)
plot(diff(log(st)))
#autocorrelación simple
acf(DlogSt,lag.max = 100)
#autocorrelacion parcial
pacf(DlogSt,lag.max = 100)
# MODELO AR (autoregresivo)
auto.arima(DlogSt)
logSt = log(st)
DlogSt = diff(logSt)
plot(DlogSt)
#autocorrelación simple
acf(DlogSt,lag.max = 100)
#autocorrelacion parcial
pacf(DlogSt,lag.max = 100)
# MODELO AR (autoregresivo)
auto.arima(DlogSt)
library(forecast)
# MODELO AR (autoregresivo)
auto.arima(DlogSt)
#autocorrelación simple
acf(DlogSt,lag.max = 100)
#autocorrelacion parcial
pacf(DlogSt,lag.max = 100)
# Ljung-Box
Box.test(arima$residuals,lag=10,type="Ljung-Box")
library(tseries)  # carga el paquete tseries
# aplica el test de Dickey-Fuller
result <- adf.test(DlogSt)
# muestra los resultados del test
print(result)
logSt = log(st)
# aplica el test de Dickey-Fuller para saber si tiene raiz unitaria
adf.test(logSt)
pib = as.numeric(df$body$data$value)
st = ts(pib,start = c(1990,1),end = c(2021,4),frequency = 4)
logSt = log(st)
# aplica el test de Dickey-Fuller para saber si tiene raiz unitaria
adf.test(logSt)
DlogSt = diff(logSt)
plot(DlogSt)
# Ljung-Box
Box.test(arima$residuals,lag=10,type="Ljung-Box")
# Ljung-Box
Box.test(arima$residuals,lag=20,type="Ljung-Box")
# Ljung-Box
Box.test(arima$residuals,lag=30,type="Ljung-Box")
# Ljung-Box
Box.test(arima$residuals,lag=3,type="Ljung-Box")
# Ljung-Box
Box.test(arima$residuals,lag=2,type="Ljung-Box")
# Ljung-Box
Box.test(arima$residuals,lag=100,type="Ljung-Box")
?Box.test
# Ljung-Box
Box.test(arima$residuals,lag=100,type="Ljung-Box")
download.file("https://api-cepalstat.cepal.org/cepalstat/api/v1/indicator/294/data?members=20183%2C511%2C512%2C513%2C514%2C21046%2C29150%2C29151%2C29152%2C29153%2C29154%2C29155%2C29156%2C29157%2C29158%2C29159%2C29160%2C29161%2C29162%2C29163%2C29164%2C29165%2C29166%2C29167%2C29168%2C29169%2C29170%2C29171%2C29172%2C29173%2C29174%2C29175%2C29176%2C29177%2C29178%2C29179%2C29180%2C29181%2C29182%2C29183%2C29184%2C29185%2C29186%2C29187%2C29188%2C29189%2C29190%2C29191%2C29192&lang=es&format=json&in=1&app=dashboardn", "archivo.json")
df = fromJSON("archivo.json")
logSt = log(st)
st
logSt = log(st)
# aplica el test de Dickey-Fuller para saber si tiene raiz unitaria
adf.test(logSt)
# aplica el test de Dickey-Fuller
# H_0: La serie temporal tiene una raíz unitaria,
# lo que significa que no es estacionari
adf.test(logSt)
# Ya que p-value es = 0.7688, no rechazamos la H_0,
# y concluimos que es no estacionaria
DlogSt = diff(logSt)
plot(DlogSt)
#autocorrelación simple
acf(DlogSt,lag.max = 100)
#autocorrelacion parcial
pacf(DlogSt,lag.max = 100)
# MODELO AR (autoregresivo)
auto.arima(DlogSt)
arima
download.file("https://api-cepalstat.cepal.org/cepalstat/api/v1/indicator/294/data?members=20183%2C511%2C512%2C513%2C514%2C21046%2C29150%2C29151%2C29152%2C29153%2C29154%2C29155%2C29156%2C29157%2C29158%2C29159%2C29160%2C29161%2C29162%2C29163%2C29164%2C29165%2C29166%2C29167%2C29168%2C29169%2C29170%2C29171%2C29172%2C29173%2C29174%2C29175%2C29176%2C29177%2C29178%2C29179%2C29180%2C29181%2C29182%2C29183%2C29184%2C29185%2C29186%2C29187%2C29188%2C29189%2C29190%2C29191%2C29192&lang=es&format=json&in=1&app=dashboardn", "archivo.json")
df = fromJSON("archivo.json")
st = ts(pib,start = c(1990,1),end = c(2021,4),frequency = 4)
download.file("https://api-cepalstat.cepal.org/cepalstat/api/v1/indicator/294/data?members=20183%2C511%2C512%2C513%2C514%2C21046%2C29150%2C29151%2C29152%2C29153%2C29154%2C29155%2C29156%2C29157%2C29158%2C29159%2C29160%2C29161%2C29162%2C29163%2C29164%2C29165%2C29166%2C29167%2C29168%2C29169%2C29170%2C29171%2C29172%2C29173%2C29174%2C29175%2C29176%2C29177%2C29178%2C29179%2C29180%2C29181%2C29182%2C29183%2C29184%2C29185%2C29186%2C29187%2C29188%2C29189%2C29190%2C29191%2C29192&lang=es&format=json&in=1&app=dashboardn", "archivo.json")
df = fromJSON("archivo.json")
pib = as.numeric(df$body$data$value)
pib = as.numeric(df$body$data$value)
# PIB LATINOAMERICA Y EL CARIBE
# Producto interno bruto trimestral por tipo del gasto a precios corrientes
library(jsonlite)
library(forecast)
library(tseries)  # carga el paquete tseries
download.file("https://api-cepalstat.cepal.org/cepalstat/api/v1/indicator/294/data?members=20183%2C511%2C512%2C513%2C514%2C21046%2C29150%2C29151%2C29152%2C29153%2C29154%2C29155%2C29156%2C29157%2C29158%2C29159%2C29160%2C29161%2C29162%2C29163%2C29164%2C29165%2C29166%2C29167%2C29168%2C29169%2C29170%2C29171%2C29172%2C29173%2C29174%2C29175%2C29176%2C29177%2C29178%2C29179%2C29180%2C29181%2C29182%2C29183%2C29184%2C29185%2C29186%2C29187%2C29188%2C29189%2C29190%2C29191%2C29192&lang=es&format=json&in=1&app=dashboardn", "archivo.json")
df = fromJSON("archivo.json")
pib = as.numeric(df$body$data$value)
st = ts(pib,start = c(1990,1),end = c(2021,4),frequency = 4)
logSt = log(st)
# aplica el test de Dickey-Fuller
# H_0: La serie temporal tiene una raíz unitaria,
# lo que significa que no es estacionari
adf.test(logSt)
# Ya que p-value es = 0.7688, no rechazamos la H_0,
# y concluimos que es no estacionaria
DlogSt = diff(logSt)
plot(DlogSt)
#autocorrelación simple
acf(DlogSt,lag.max = 100)
#autocorrelacion parcial
pacf(DlogSt,lag.max = 100)
# MODELO AR (autoregresivo)
auto.arima(DlogSt)
# Ljung-Box
Box.test(arima$residuals,lag=100,type="Ljung-Box")
# MODELO AR (autoregresivo)
model = auto.arima(DlogSt)
model
# Ljung-Box
Box.test(model$residuals,lag=100,type="Ljung-Box")
# Ljung-Box
# H_0: los residuos son iid,
# por lo tanto no hay autocorrelación.
Box.test(model$residuals,lag=100,type="Ljung-Box")
model
#library
library(readxl)
library(forecast)
library(zoo)
library(lmtest)
library(ggplot2)
library(tseries)
#data
export=read_excel("../data/exportaciones servicios_España.xlsx",sheet="Gretl",col_names = "export")
export=ts(export,start=c(1995,1),frequency=4)
ipc = read_excel("../data/IPC_España.xlsx",sheet = "Hoja1",col_names = "ipc")
ipc = ts(ipc,start = c(2002,1),frequency = 12)
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = okun[,2:3]
okun=ts(okun,start = c(1980,1),frequency = 1)
export
summary(export)
plot(export)
adf.test(log(export))
adf.test(export)
plot(export)
adf.test(log(export))
d.l.expor = ts(diff(log(export)))
fac=acf(d.l.expor,lag.max=30)
fac$acf
facp = pacf(d.l.expor,lag.max = 30)
fac=acf(d.l.expor,lag.max=30)
auto.arima(d.l.expor)
auto.arima(d.l.expor)
Box.test(d.l.expor$residuals,lag=30,type="Ljung-Box")
arima202=arima(d.l.expor,c(2,0,2))
arima202=arima(d.l.expor,c(2,0,2))
d.l.expor = ts(diff(log(export)))
fac=acf(d.l.expor,lag.max=30)
fac$acf
facp = pacf(d.l.expor,lag.max = 30)
facp$acf
arima202=arima(d.l.expor,c(2,0,2))
coeftest(arima202)
auto.arima(d.l.expor)
arima202=arima(d.l.expor,c(2,0,2))
Box.test(arima202$residuals,lag=30,type="Ljung-Box")
arima202=arima(d.l.expor,c(2,0,2))
coeftest(arima202)
auto.arima(d.l.expor)
auto.arima(d.l.expor)
?auto.arima()
arima202=arima(d.l.expor,c(2,0,2),trace=TRUE)
auto.arima(d.l.expor,trace = TRUE)
auto.arima(d.l.expor,trace = TRUE)
AIC(arima202)
arima202=arima(d.l.expor,c(0,0,3))
AIC(arima202)
coeftest(arima202)
BIC(arima202)
arima003=arima(d.l.expor,c(0,0,3))
AIC(arima003)
BIC(arima003)
arima202=arima(d.l.expor,c(2,0,2))
AIC(arima202)
BIC(arima202)
arima202=arima(d.l.expor,c(2,0,2))
AIC(arima202)
BIC(arima202)
arima003=arima(d.l.expor,c(0,0,3))
AIC(arima003)
BIC(arima003)
auto.arima(d.l.expor,trace = TRUE)
arima202=arima(d.l.expor,c(2,0,2))
AIC(arima202)
BIC(arima202)
arima003=arima(d.l.expor,c(0,0,3))
AIC(arima003)
BIC(arima003)
fac=acf(d.l.expor,lag.max=30)
fac$acf
fac=acf(d.l.expor,lag.max=30)
fac$acf
facp = pacf(d.l.expor,lag.max = 30)
fac=acf(d.l.expor,lag.max=30)
arima103=arima(d.l.expor,c(1,0,3))
AIC(arima103)
BIC(arima103)
AIC(arima202)
BIC(arima202)
AIC(arima003)
BIC(arima003)
AIC(arima103)
BIC(arima103)
AIC(arima202)
AIC(arima003)
AIC(arima103)
BIC(arima202)
BIC(arima003)
BIC(arima103)
coeftest(arima003)
plot(ipc)
adf.test(ipc)
d.l.ipc = ts(diff(log(ipc)))
plot(d.l.ipc)
fac=acf(d.l.ipc,lag.max=30)
fac$acf
fac=acf(d.l.ipc,lag.max=30)
plot(d.l.ipc)
pacf(d.l.ipc,lag.max=30)
acf(d.l.ipc,lag.max=30)
pacf(d.l.ipc,lag.max=30)
acf(d.l.ipc,lag.max=30)
pacf(d.l.ipc,lag.max=30)
u = ts(log(okun[,1]))
u
adf.test(u,k=5)
pp.test(u)
summary(u)
u = ts(okun[,1])
summary(u)
plot(u)
u = ts(okun[,1],start = c(1980,1),frequency = 12)
summary(u)
plot(u)
u = ts(okun[,1],start = c(1980),end = c(2012),frequency = 12)
summary(u)
plot(u)
u = ts(okun[,1],start = c(1980),end = c(2012),frequency = 1)
summary(u)
plot(u)
summary(u)
adf.test(u,k=5)
pp.test(u)
l.okun = log(u)
d.l.ipc = ts(diff(log(ipc)))
plot(d.l.ipc)
acf(d.l.ipc,lag.max=30)
pacf(d.l.ipc,lag.max=30)
acf(d.l.ipc,lag.max=30)
summary(u)
plot(u)
l.okun = log(u)
adf.test(u,k=5)
#library
library(readxl)
library(forecast)
library(forecast)
library(zoo)
library(lmtest)
library(ggplot2)
library(tseries)
l.okun = log(u)
adf.test(u,k=5)
pp.test(u)
adf.test(l.okun,k=5)
pp.test(l.okun)
plot(l.okun)
plot(u)
plot(l.okun)
adf.test(l.okun,k=5)
d.l.ukun = diff(l.okun)
plot(d.l.ukun)
d.l.okun = diff(l.okun)
plot(d.l.okun)
d.d.l.okun = diff(d.l.okun)
plot(d.d.l.okun)
###############################################################################
#LIBRARY
library(readxl)
library(forecast)
library(zoo)
library(lmtest)
library(ggplot2)
library(tseries)
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#LIBRARY
library(readxl)
library(forecast)
library(zoo)
library(lmtest)
library(ggplot2)
library(tseries)
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#LIBRARY
library(readxl)
library(forecast)
library(zoo)
library(lmtest)
library(ggplot2)
library(tseries)
###############################################################################
#DATA
okun = read_excel("../data/datos_Ley Okun.xlsx", sheet = "Hoja3")
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
View(okun)
okun = okun[,2:3]
okun=ts(okun,start = c(1980,1),frequency = 1)
plot(okun)
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = okun[,2:3]
okun=ts(okun,start = c(1980,1),frequency = 1)
plot(okun)
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = okun[,1]
okun=ts(okun,start = c(1980,1),frequency = 1)
plot(okun)
okun = okun[,1]
okun
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
View(okun)
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = okun[,3]
okun
okun=ts(okun,start = c(1980,1),frequency = 1)
plot(okun)
###############################################################################
#DATA
okun = read_excel("./data/datos_Ley Okun.xlsx", sheet = "Hoja3")
okun = okun[,2:3]
okun
okun=ts(okun,start = c(1980,1),frequency = 1)
okun
plot(okun)
l.okun = log(okun)
l.okun
install.packages("urca")
install.packages("urca")
library(urca)
l.okun
###############################################################################
# u = desempleo
# y = producción
###############################################################################
# Cointegración.
ca.jo(l.okun)
?ca.jo
?rdbnomics
?rdbnomics
install.packages("rdbnomics")
?rdbnomics
?rdbnomics
