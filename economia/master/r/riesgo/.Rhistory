diff(df$FD,lag=1)
# Forward (h,1,1)
diff(x)/x[-length(x)]
# Forward (h,1,1)
diff(df$FD)/df$FD[-length(df$FD)]
# Forward (h,1,1)
diff(df$FD)/df$FD[-length(df$FD)]
diff[df$FD]
diff(df$FD)
View(df)
# Forward (h,1,1)
diff(df$FD)/df$FD[-length(df$FD)]
diff(df$FD)
diff(df$FD,lag = 1)
df
0.9953421-0.9976586
# Definir una función para calcular el porcentaje de cambio
porcCambio = function(x) {
(1/x[2] - 1) * (1/x[1])
}
df$FD[-length(df$FD)]
df$FD[-length(df$FD)]
df$FD[length(df$FD)]
# Forward (h,1,1)
diff(df$FD)/df$FD[-length(df$FD)]
# Forward (h,1,1)
df$FD[-1] / x[-length(x)]
# Forward (h,1,1)
df$FD[-1] / df$FD[-length(df$FD)]
df
df$FD[-1]
df$FD
?diff
?diff()
diff(df$FD,lag = 1)
diff(df$FD,lag =2)
diff(df$FD,differences = 2)
diff(df$FD,lag =1)
df
df$FD[1]
df$FD[2]- df$FD[1]
df$FD[2]/df$FD[1]
7644.6-7783.4
7644.6/7783.4
7783.4/7644.6
log(7783.4-7783.4)
log(7783.4/7783.4)
log(7783.4-7644.6)
rentabActivo(cartera$ibex)
log(123)
7644.6-7783.4
log(-138.8)
diff(cartera$ibex)
log(diff(df$FD,lag = 1))
log(cartera$ibex)
8.959749- 8.941755
calcular_razon <- function(df, columna) {
razon <- diff(df[[columna]]) / df[[columna]][-1]
return(razon)
}
calcular_razon(df,FD)
calcular_razon(df,"FD")
calcular_razon <- function(df, columna) {
razon <- diff(df[[columna]]) / df[[columna]][-1]
return(razon)
}
calcular_razon(df,"FD")
diff(df$FD/df$FD[-1])
tail(df$FD)
df$FD
tail(df$FD)
c(tail(df$FD,-1)/head(df$FD,-1),NA)
c(,tail(df$FD),-1/head(df$FD,-1))
c( ,tail(df$FD),-1/head(df$FD,-1))
c("",tail(df$FD),-1/head(df$FD,-1))
c(NA,tail(df$FD),-1/head(df$FD,-1))
df$FD[2]/df$FD[1]
df$FD[2]/df$FD[1]
df$FD[3]/df$FD[2]
df$FD[4]/df$FD[3]
# Forward (h,h+1,h+1) (tipo de interes)
division_consecutiva <- function(x){
n <- length(x)
division <- numeric(n-1)
for(i in 1:(n-1)){
division[i] <- x[i+1]/x[i]
}
return(division)
}
division_consecutiva(df$FD)
df$FD[2]/df$FD[1]
df["forward"]=tail(NA,division_consecutiva(df$FD))
df["forward"] = c(NA,division_consecutiva(df$FD))
df
# Crear el data frame
df = data.frame(
num = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
FD = c(0.99765855, 0.995342123, 0.993152749, 0.991075578, 0.989241414,
0.987374908, 0.976018682, 0.962154182, 0.947061336, 0.946061336)
)
# Definir una función para calcular el porcentaje de cambio
porcCambio = function(x) {
(1/x[2] - 1) * (1/x[1])
}
# Aplicar la función a cada fila del data frame
df$porcCambio <- apply(df[, c("num", "FD")], 1, porcentaje_cambio)
# Forward (h,h+1,h+1) (tipo de interes)
division_consecutiva <- function(x){
n <- length(x)
division <- numeric(n-1)
for(i in 1:(n-1)){
division[i] <- x[i+1]/x[i]
}
return(division)
}
df["forward"] = c(,division_consecutiva(df$FD))
df
df["forward"] = c(NA,division_consecutiva(df$FD))
df
mean(df$forward)
mean(df$forward,is.na=FALSE)
mean(df$forward,is.na=TRUE)
mean(df$porcCambio)
mean(df$forward)
mean(df$forward,is.na=FALSE)
mean(df$forward,is.na=TRUE)
df=na.omit(df$forward)
df=na.omit(df$forward)
df=na.omit(df)
df
df
df
# Crear el data frame
df = data.frame(
num = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
FD = c(0.99765855, 0.995342123, 0.993152749, 0.991075578, 0.989241414,
0.987374908, 0.976018682, 0.962154182, 0.947061336, 0.946061336)
)
# Definir una función para calcular el porcentaje de cambio
porcCambio = function(x) {
(1/x[2] - 1) * (1/x[1])
}
# Aplicar la función a cada fila del data frame
df$porcCambio <- apply(df[, c("num", "FD")], 1, porcentaje_cambio)
# Forward (h,h+1,h+1) (tipo de interes)
division_consecutiva <- function(x){
n <- length(x)
division <- numeric(n-1)
for(i in 1:(n-1)){
division[i] <- x[i+1]/x[i]
}
return(division)
}
df["forward"] = c(NA,division_consecutiva(df$FD))
df
df$forward = na.omit(df$forward)
mean(df$forward,na.rm = TRUE)
df=na.rm(df)
df$forward = na.omit(df$forward)
df$forward = na.omit(df$forward)
df
df$forward = na.omit(df$forward)
?na.omit
1/(1+df$porcCambio)*df$FD[-1]
1/(1+df$porcCambio)*df$FD
1/(1+df$porcCambio)*df$FD
(1/(1+df$porcCambio))*df$FD
df
(1/(1+0.9976781))*0.9976586
division_consecutiva(df$FD)
# Forward (h,h+1,h+1) (tipo de interes)
(1/(df$FD[-1]))
df$FD[-1]
df$FD[-1]
df$FD[-2]
# Forward (h,h+1,h+1) (tipo de interes)
df$FD[-3]
# Forward (h,h+1,h+1) (tipo de interes)
df$FD[1]
# Forward (h,h+1,h+1) (tipo de interes)
df$FD[-1]
df$FD
# Forward (h,h+1,h+1) (tipo de interes)
df$FD/df$FD[-1]
# Forward (h,h+1,h+1) (tipo de interes)
df$FD/df$FD[-1]
# Forward (h,h+1,h+1) (tipo de interes)
1/(df$FD/df$FD[-1])-1
# Forward (h,h+1,h+1) (tipo de interes)
1/(df$FD/df$FD[-1])-1
# Forward (h,h+1,h+1) (tipo de interes)
1/(df$FD/df$FD[-2])-1
# Forward (h,h+1,h+1) (tipo de interes)
1/(df$FD/df$FD[-1])-1
1/(0.995342123/0.99765855)-1
# Forward (h,h+1,h+1) (tipo de interes)
diff(df$FD)
# Forward (h,h+1,h+1) (tipo de interes)
diff(df$FD,lag = 1)
# Forward (h,h+1,h+1) (tipo de interes)
1/diff(df$FD,lag = 1)-1
# Forward (h,h+1,h+1) (tipo de interes)
1/(df$FD[2]/df$FD[1])-1
# Forward (h,h+1,h+1) (tipo de interes)
for(i in df$num){
1/(df$FD[i+1]/df$FD[i])-1
}
# Forward (h,h+1,h+1) (tipo de interes)
for(i in df$num){
print(1/(df$FD[i+1]/df$FD[i])-1)
}
forward=function(x){
for(i in 1:length(x)){
print(1/(df$FD[i+1]/df$FD[i])-1)
}
}
forward(df$FD)
forward=function(x){
for(i in 1:length(x)){
print(1/(df$FD[i+1]/df$FD[i])-1)
}
}
forward(df$FD)
# Forward (h,h+1,h+1) (tipo de interes)
forward <- function(x) {
result <- numeric(length(x))
result[-1] <- 1/(x[-1]/x[-length(x)]) - 1
result[1] <- NA
return(result)
}
forward(df$FD)
# Crear el data frame
df = data.frame(
num = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
FD = c(0.99765855, 0.995342123, 0.993152749, 0.991075578, 0.989241414,
0.987374908, 0.976018682, 0.962154182, 0.947061336, 0.946061336)
)
# Definir una función para calcular el porcentaje de cambio
porcCambio = function(x) {
(1/x[2] - 1) * (1/x[1])
}
# Aplicar la función a cada fila del data frame
df$porcCambio <- apply(df[, c("num", "FD")], 1, porcentaje_cambio)
# Forward (h,h+1,h+1) (tipo de interes)
forward <- function(x) {
result <- numeric(length(x))
result[-1] <- 1/(x[-1]/x[-length(x)]) - 1
result[1] <- NA
return(result)
}
df$forward = apply(df[,"FD"],1,forward)
df
forward(df$FD)
df["forward"]=forward(df$FD)
df
#Curva de factor de descuento
(1/(1+df$porcCambio))*df$FD
#Curva de factor de descuento
(1/(1+df$FD))*df$FD
#Curva de factor de descuento
(1/(1+df$forward))*df$FD
#Curva de factor de descuento
(1/(1+df$forward[-1]))*df$FD
#Curva de factor de descuento
(1/(1+df$forward))*df$FD[+1]
df$FD[+1]
df$FD[-1]
#Curva de factor de descuento
(1/(1+df$forward[-1]))*df$FD
#Curva de factor de descuento
(1/(1+df$forward))*df$FD
df$forward
#Curva de factor de descuento
(1/(1+df$forward[-1]))*df$FD
#Curva de factor de descuento
result=(1/(1+df$forward[-1]))*df$FD
result[1:(length(result)-1)]
#Curva de factor de descuento
result=(1/(1+df$forward[-1]))*df$FD
df["factDescuento"]=result[1:(length(result)-1)]
#Curva de factor de descuento
result=(1/(1+df$forward[-1]))*df$FD
df["factDescuento"]=c(NA,result[1:(length(result)-1)])
df
riesgo
riesgo = data.frame(
cartera = c("bonoA", "bonoB"),
vencimiento = c(10, 4),
vn = c(1000, 2000),
cupon = c(0.06, 0.04)
)
riesgo
riesgo$vn*riesgo$cupon
for (i in 1:length(df)) {
riesgo$vn*riesgo$cupon
}
for (i in 1:length(df)) {
print(riesgo$vn*riesgo$cupon)
}
for (i in 1:length(df$num)) {
print(riesgo$vn*riesgo$cupon)
}
df[c("genBonoA,genBonoB")] =  for (i in 1:length(df$num)) {
print(riesgo$vn*riesgo$cupon)
}
df
df[c("genBonoA,genBonoB")] =  for (i in 1:length(df$num)) {
print(riesgo$vn*riesgo$cupon)
}
df[c("genBonoA,genBonoB")] =  for (i in 1:length(df$num)) {
riesgo$vn*riesgo$cupon
}
df
View(df)
for (i in 1:length(df$num)) {
riesgo$vn*riesgo$cupon
}
for (i in 1:length(df$num)) {
riesgo$vn*riesgo$cupon
}
for (i in 1:length(df$num)) {
return(riesgo$vn*riesgo$cupon)
}
for (i in 1:length(df$num)) {
print(riesgo$vn*riesgo$cupon)
}
# Cuales son las rentas que genera el bono.
# genera bono A
columna1 <- numeric(length(df$num))
columna2 <- numeric(length(df$num))
for (i in 1:length(df$num)) {
columna1[i] <- riesgo$vn[i]
columna2[i] <- riesgo$cupon[i]
}
# Cuales son las rentas que genera el bono.
# genera bono A
columna1 <- numeric(length(df$num))
columna2 <- numeric(length(df$num))
for (i in 1:length(df$num)) {
columna1[i] <- riesgo$vn[i]
columna2[i] <- riesgo$cupon[i]
}
columna1
columna2
for (i in 1:length(df$num)) {
print(riesgo$vn*riesgo$cupon)
}
# Cuales son las rentas que genera el bono.
# genera bono A
riesgo
# Cuales son las rentas que genera el bono.
# genera bono A
riesgo
for (i in 1:riesgo$vencimiento[10]) {
}
for (i in 1:riesgo$vencimiento[1]) {
}
for (i in 1:riesgo$vencimiento[1]) {
print(i)
}
# Cuales son las rentas que genera el bono.
# genera bono A
x=for (i in 1:riesgo$vencimiento[1]) {
print(i)
}
# Cuales son las rentas que genera el bono.
# genera bono A
x=for (i in 1:riesgo$vencimiento[1]) {
print(i)
}
# Cuales son las rentas que genera el bono.
# genera bono A
riesgo
riesgoBonoA=for (i in 1:riesgo$vencimiento[1]) {
riesgo$cupon*riesgo$vn
}
riesgoBono=for (i in 1:riesgo$vencimiento[1]) {
riesgo$cupon*riesgo$vn
}
riesgoBono
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBono=for (i in 1:riesgo$vencimiento[1]) {
riesgo$cupon*riesgo$vn
}
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBono=for (i in 1:riesgo$vencimiento[1]) {
print(riesgo$cupon*riesgo$vn)
}
riesgoBono
x
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBono=c()
for (i in 1:riesgo$vencimiento[1]) {
riesgoBono=c(riesgo$cupon*riesgo$vn)
}
riesgoBono
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
for (i in 1:riesgo$vencimiento[1]) {
riesgoBono=c(riesgo$cupon[1]*riesgo$vn[2])
}
riesgoBonoA
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
for (i in 1:riesgo$vencimiento[1]) {
riesgoBonoA=c(riesgo$cupon[1]*riesgo$vn[2])
}
riesgoBonoA
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
for (i in 1:riesgo$vencimiento[1]) {
riesgoBonoA=c(riesgo$cupon[1]*riesgo$vn[1])
}
riesgoBonoA
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
for (i in 1:riesgo$vencimiento[1]) {
riesgoBonoA=c(riesgoBonoA,riesgo$cupon[1]*riesgo$vn[1])
}
riesgoBonoA
riesgoBonoB=c()
for (i in 1:riesgo$vencimiento[2]) {
riesgoBonoB=c(riesgoBonoB,riesgo$cupon[2]*riesgo$vn[2])
}
riesgoBonoB
# Cuales son las rentas que genera el bono.
# genera bono A
riesgoBonoA=c()
for (i in 1:riesgo$vencimiento[1]) {
if (i == riesgo$vencimiento[1]) {
riesgoBonoA=c(riesgoBonoA, riesgo$cupon[1]*riesgo$vn[1] + riesgo$vn[1])
} else {
riesgoBonoA=c(riesgoBonoA, riesgo$cupon[1]*riesgo$vn[1])
}
}
riesgoBonoA
riesgoBonoB=c()
for (i in 1:riesgo$vencimiento[2]) {
if (i == riesgo$vencimiento[2]) {
riesgoBonoB=c(riesgoBonoB, riesgo$cupon[2]*riesgo$vn[2] + riesgo$vn[2])
} else {
riesgoBonoB=c(riesgoBonoB, riesgo$cupon[2]*riesgo$vn[2])
}
}
riesgoBonoB
#CUAL ES EL VALOR DEL BONO?
riesgoBonoA*df$FD
#CUAL ES EL VALOR DEL BONO?
riesgoBonoA%*%df$FD
#CUAL ES EL VALOR DEL BONO A?
riesgoBonoB%*%df$FD
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB %*% rep(df$FD, each = length(riesgoBonoB) / length(df$FD))
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB %*% rep(df$FD, each = length(riesgoBonoB)/length(df$FD))
#CUAL ES EL VALOR DEL BONO A?
riesgoBonoB <- matrix(riesgoBonoB, ncol = 1) # convertir a matriz de 1 columna
valorBonoB <- riesgoBonoB %*% rep(df$FD, length(riesgoBonoB))
valorBonoB
valorBonoB
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB %*% rep(df$FD, each = length(riesgoBonoB)/length(df$FD))
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB%*%df$FD
valorBonoB
#CUAL ES EL VALOR DEL BONO A?
valorBonoA = riesgoBonoA%*%df$FD
valorBonoA
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB%*%df$FD
valorBonoB
rm(valorBonoB)
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB%*%df$FD
valorBonoB
rm(riesgoBonoB)
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB%*%df$FD
riesgoBonoB=c()
for (i in 1:riesgo$vencimiento[2]) {
if (i == riesgo$vencimiento[2]) {
riesgoBonoB=c(riesgoBonoB, riesgo$cupon[2]*riesgo$vn[2] + riesgo$vn[2])
} else {
riesgoBonoB=c(riesgoBonoB, riesgo$cupon[2]*riesgo$vn[2])
}
}
#CUAL ES EL VALOR DEL BONO A?
valorBonoB = riesgoBonoB%*%df$FD
valorBonoB <- riesgoBonoB %*% df$FD[1:4]
valorBonoB
# VALOR de la CARTERA
valorBonoA+valorBonoB
# VALOR de la CARTERA
CARTERA = valorBonoA+valorBonoB
# SUMA DE BONOS SEGUN LOS AÑOS
riesgoBonoA[1:4]+riesgoBonoB
# SUMA DE BONOS SEGUN LOS AÑOS
sumaBono=riesgoBonoA[1:4]+riesgoBonoB
#TIPOS FORWARD
df$factDescuento
#TIPOS FORWARD
df$forward
